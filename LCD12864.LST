C51 COMPILER V9.00   LCD12864                                                              06/10/2017 21:55:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN LCD12864.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          
   3          //*********头文件定义********//
   4          #include "LCD12864.h"
   5          
   6          //*********数据类型定义********//
   7          uchar qian_data,ge_data,shi_data,bai_data ;                                                                                                     //转换数据定义
   8          uchar oct_table[10] = {'0','1','2','3','4','5','6','7','8','9'};                                                        //显示10进制数
   9          uchar hex_table[16] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};        //显示16进制数
  10          
  11          //*********函数定义********//
  12          
  13          #ifdef _LCD1602            //器件选择编译宏
              
              //*********LCD1602函数定义********//
              void LCD_Write_Com(uchar com) 
              {  
                      delay_ms(5);
                      RS=0; 
                      RW=0; 
                      EN=1; 
                      P0=com; 
                      EN=0;
              }
              
              void LCD_Write_Data(uchar Data)//写数据函数 
              { 
                      delay_ms(5);
                      RS=1; 
                      RW=0; 
                      EN=1; 
                      P0=Data; 
                      EN=0;
              }
              
              void Gotoxy(uchar x,uchar y)  
              {     
                      if (x == 1) 
                      {     
                              LCD_Write_Com(0x80 + y-1);     //表示第一行
                      }
                      else 
                      {      
                              LCD_Write_Com(0xC0 + y-1);      //表示第二行
                      }        
              }
              
              void LCD_Write_String(uchar *s)   //写字符串函数
              {    
                      while (*s) 
                      {     
                              LCD_Write_Data( *s);     
                              s ++;     
                      }
              }
C51 COMPILER V9.00   LCD12864                                                              06/10/2017 21:55:43 PAGE 2   

              
              //LCD初始化函数//
              void Init_LCD12864(void) 
              {
                      LCD_Write_Com(0x38);    /*显示模式设置*/ 
                      delay_ms(1); 
                      LCD_Write_Com(0x38); 
                      delay_ms(1); 
                      LCD_Write_Com(0x38); 
                      delay_ms(1); 
                      LCD_Write_Com(0x38);  
                      LCD_Write_Com(0x08);    /*显示关闭*/ 
                      LCD_Write_Com(0x01);    /*显示清屏*/ 
                      LCD_Write_Com(0x06);    /*显示光标移动设置*/ 
                      delay_ms(1); 
                      LCD_Write_Com(0x0C);    /*显示开及光标设置*/
              } 
              
              #endif
  75          //*********LCD1602函数定义结束********//
  76          
  77          #ifdef _LCD12864                   //器件选择编译宏
  78          
  79          //*********LCD12864函数定义********//
  80          void LCD_Write_Com(uchar com) 
  81          {  
  82   1       delay_ms(5);
  83   1       RS=0; 
  84   1       RW=0; 
  85   1       EN=1; 
  86   1       P0=com; 
  87   1       EN=0;
  88   1      }
  89          
  90          void Gotoxy(uchar x,uchar y)  
  91          {     
  92   1              if (x == 1) 
  93   1              {     
  94   2                      LCD_Write_Com(0x80 + y-1);              //表示第一行
  95   2              }
  96   1              else if(x == 2)
  97   1              {      
  98   2                      LCD_Write_Com(0x90 + y-1);              //表示第二行
  99   2              }        
 100   1              else if(x == 3)
 101   1              {
 102   2                      LCD_Write_Com(0x88 + y-1);              //表示第三行
 103   2              }
 104   1              else if(x == 4)
 105   1              {
 106   2                      LCD_Write_Com(0x98 + y-1);              //表示第四行
 107   2              }
 108   1      }
 109          
 110          void LCD_Write_Data(uchar Data)//写数据函数 
 111          { 
 112   1              delay_ms(5);
 113   1              RS=1; 
 114   1              RW=0; 
 115   1              EN=1; 
 116   1              P0= Data; 
 117   1              EN=0;
C51 COMPILER V9.00   LCD12864                                                              06/10/2017 21:55:43 PAGE 3   

 118   1      }
 119          
 120          //void LCD_Write_String(uchar x,uchar y,uchar *s)   //写字符串函数
 121          void LCD_Write_String(uchar *s)   //写字符串函数
 122          {     
 123   1      //      if (x == 1) 
 124   1      //      {     
 125   1      //              LCD_Write_Com(0x80 + y-1);              //表示第一行
 126   1      //      }
 127   1      //      else if(x == 2)
 128   1      //      {      
 129   1      //              LCD_Write_Com(0x90 + y-1);              //表示第二行
 130   1      //      }        
 131   1      //      else if(x == 3)
 132   1      //      {
 133   1      //              LCD_Write_Com(0x88 + y-1);              //表示第三行
 134   1      //      }
 135   1      //      else if(x == 4)
 136   1      //      {
 137   1      //              LCD_Write_Com(0x98 + y-1);              //表示第四行
 138   1      //      }        
 139   1              while (*s) 
 140   1              {     
 141   2                      LCD_Write_Data( *s);     
 142   2                      s ++;     
 143   2              }
 144   1      }
 145          
 146          //初始化函数12864//
 147          void LCD_Init(void) 
 148          {
 149   1         LCD_Write_Com(0x30);    /*显示模式设置*/ 
 150   1         delay_ms(1); 
 151   1         LCD_Write_Com(0x30); 
 152   1         delay_ms(1); 
 153   1           
 154   1         LCD_Write_Com(0x08);    /*显示关闭*/ 
 155   1         LCD_Write_Com(0x10);
 156   1         delay_ms(1); 
 157   1         LCD_Write_Com(0x0C);    /*显示开及光标设置*/
 158   1         LCD_Write_Com(0x01);    /*显示清屏*/ 
 159   1         LCD_Write_Com(0x06);    /*显示光标移动设置*/ 
 160   1         
 161   1      }
 162          
 163          #endif
 164          //*********LCD12864函数定义结束********//
 165          
 166          //LCD1602+12864的清屏函数
 167          void LCD_Clear()
 168          {
 169   1              LCD_Write_Com(0x01);
 170   1      }
 171          
 172          //显示+数据转换程序
 173          void ConvertNumToDisplay(uchar x,uchar y,uint Num)  
 174          {  
 175   1              qian_data=Num/1000 ;
 176   1              Num=Num%1000;   //取余运算
 177   1              bai_data=Num/100 ;
 178   1              Num=Num%100;   //取余运算
 179   1              shi_data=Num/10 ;
C51 COMPILER V9.00   LCD12864                                                              06/10/2017 21:55:43 PAGE 4   

 180   1              Num=Num%10;   //取余运算
 181   1              ge_data=Num;
 182   1              
 183   1              Gotoxy(x,y);
 184   1      
 185   1              LCD_Write_String("DIST: ");
 186   1              LCD_Write_Data(qian_data+0x30);
 187   1              LCD_Write_Data(bai_data+0x30);
 188   1              LCD_Write_Data(shi_data+0x30);
 189   1              LCD_Write_Data('.');
 190   1              LCD_Write_Data(ge_data+0x30);
 191   1              LCD_Write_String("CM"); 
 192   1      
 193   1      //      EA=1;
 194   1      }
 195          
 196          //显示10进制数//
 197          void ConvertOctToDisplay(uchar x,uchar y,uint Octnum)
 198          {
 199   1              uchar a, b, c, d;
 200   1              
 201   1              a = (Octnum/256)/10; //取高字节的高4位
 202   1              b = (Octnum/256)%10; //取高字节的低4位
 203   1              
 204   1              c = (Octnum%256)/10; //取低字节的高4位
 205   1              d = (Octnum%256)%10; //取低字节的低4位
 206   1      
 207   1              Gotoxy(x,y);    
 208   1      
 209   1              LCD_Write_Data(oct_table[a]);
 210   1              LCD_Write_Data(oct_table[b]);
 211   1              LCD_Write_Data('.');
 212   1              LCD_Write_Data(oct_table[c]);
 213   1              LCD_Write_Data(oct_table[d]);
 214   1      }
 215          
 216          //显示16进制数//
 217          void ConvertHexToDisplay(uchar x,uchar y,uint Hexnum)
 218          {
 219   1              uchar a, b, c, d;
 220   1              
 221   1              a = (Hexnum/256)/16; //取高字节的高4位
 222   1              b = (Hexnum/256)%16; //取高字节的低4位
 223   1              
 224   1              c = (Hexnum%256)/16; //取低字节的高4位
 225   1              d = (Hexnum%256)%16; //取低字节的低4位
 226   1      
 227   1              Gotoxy(x,y);
 228   1      
 229   1              LCD_Write_Data(hex_table[a]);
 230   1              LCD_Write_Data(hex_table[b]);
 231   1              LCD_Write_Data(hex_table[c]);
 232   1              LCD_Write_Data(hex_table[d]);
 233   1      }
 234          
 235          ////测距结果显示//
 236          //void RangingDisplay()
 237          //{
 238          //      Gotoxy(1,1);
 239          //      LCD_Write_String("DIST: ");
 240          //      LCD_Write_Data(qian_data+0x30);
 241          //      LCD_Write_Data(bai_data+0x30);
C51 COMPILER V9.00   LCD12864                                                              06/10/2017 21:55:43 PAGE 5   

 242          //      LCD_Write_Data(shi_data+0x30);
 243          //      LCD_Write_Data('.');
 244          //      LCD_Write_Data(ge_data+0x30);
 245          //      LCD_Write_String("CM");                 
 246          //}
 247          
 248          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    527    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
